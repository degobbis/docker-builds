#!/usr/bin/env sh

if [ -z "$mysql_options" ]; then
    mysql_options='--protocol=socket --user=root --host=localhost --comments'
fi

if ! type 'execute' &>/dev/null; then
    # Execute mysql file
    # file can be passed directly or by HEREDOC
    execute() {
        local statement=""
        local message=""
        local dbname="$(get_db_name "$1")"
        local file="$1"

        if [ -f "$file" ]; then
            statement="/*!40000 DROP DATABASE IF EXISTS \`${dbname}\`*/; \
                        CREATE DATABASE /*!32312 IF NOT EXISTS*/ \`${dbname}\` \
                        /*!40100 DEFAULT CHARACTER SET utf8mb4 */;"
            message=$(mysql -ss $mysql_options -e "$statement" 2>&1 >/dev/null)

            if [ -z "$message" ] ; then
                message=$(mysql -ss $mysql_options --database="$dbname" < "$file" 2>&1 >/dev/null)
            fi
        fi

        if [ -n "$message" ] ; then
            echo "$message"
            mysql -ss $mysql_options -e "DROP DATABASE IF EXISTS $dbname" &> /dev/null
            sleep 1
        else
            echo "OK"
        fi
    }
fi

get_db_name() {
    local filename="$1"
    echo "$(basename "$filename" | sed 's/\(.*\)\..*/\1/')"
}

wait_for_mysql_server_is_started() {
    echo -n "Wait for database server is started: "
    for i in {60..0}; do
        if pidof "mysqld_safe" &>/dev/null; then
            echo " started"
            break
        fi
        echo -n "."
        sleep 2
    done
    if [ "$i" = 0 ]; then
        echo "Unable to start server."
        exit 1
    fi
}

echo 'MySQL init process in progress...'

wait_for_mysql_server_is_started

for f in /docker-entrypoint-initdb.d/*; do
    filename=$(basename "$f")
    case "$f" in
        *.sh)     echo "executing: $filename"; . "$f" ;;
        *.sql)    echo "restoring: $filename -" $(execute "$f") ;;
        *.sql.gz) echo -n "restoring: $filename -"
            if [ -f "/docker-entrypoint-initdb.d/$(get_db_name "$filename")" ]; then
                echo " skipped, while SQL file found with the same name!"
            else
                gunzip -c "$f" > "/tmp/$(get_db_name "$filename")" && execute "/tmp/$(get_db_name "$filename")" && rm -f "/tmp/$(get_db_name "$filename")" || rm -f "/tmp/$(get_db_name "$filename")"
            fi
            ;;
        *)        echo "ignoring: $filename" ;;
    esac
done
